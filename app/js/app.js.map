{"version":3,"names":[],"mappings":"","sources":["app.js"],"sourcesContent":["// add and remove class to menu\nconst menuTraffic = document.querySelectorAll('.menu-traffic p')\nfunction addRemoveClass(event){\n  event.preventDefault()\n \tmenuTraffic.forEach( element => element.classList.remove('active') )\n  this.classList.add('active')\n}\nmenuTraffic.forEach( elements => elements.addEventListener('click', addRemoveClass))\n\n\n\n// Charts Deafault settings\n\nChart.defaults.global.maintainAspectRatio = false\n\n//get Traffic line Chart canvas\nconst ctx = document.getElementById('traffic-chart');\n// get Daily traffic bar chart canvas\nconst dtc = document.getElementById('daily-traffic-chart');\n// get Mobile Users pie Chart canvas\nconst muc = document.getElementById('mobile-users-chart');\n\nlet hourly = [\n  [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],\n  [40,56,89,22,30,34,56,9,56,29,33,45,61,28,34,42,37,40,65,76,77,79,52,54]\n];\nlet daily = [\n  [\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],\n  [\"50\", \"75\", \"150\", \"100\", \"200\", \"175\",\"75\"],\n  {max: 500, min:0, stepSize: 100}\n];\nlet weekly = [\n  [\"16-22\", \"23-29\", \"30-5\", \"6-12\", \"13-19\", \"20-26\", \"27-3\", \"4-10\", \"11-17\", \"18-24\", \"25-31\"], \n  [\"0\", \"500\",\"1000\", \"750\", \"1250\", \"1750\", \"1250\", \"1500\",\"1000\",\"1500\", \"2000\", \"1500\", \"2000\" ],\n  { max: 2500, min: 0, stepSize: 500 }\n];\nlet monthly = [\n  [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dic\"],\n  [2000,4000,3000,2500,3500,2500,3000,2000,5000, 8000, 8500, 7000],\n  {max: 10000, min: 0, stepSize: 1500}\n];\n\nvar trafficChart = new Chart(ctx, {\n    type: 'line',\n    data: {\n    labels: weekly[0],\n    datasets: [{\n      fill: true,\n      lineTension: 0,\n      backgroundColor: \"rgba(226, 227, 246,.7)\",\n      borderColor: \"rgba(101, 106, 187, 1)\",\n      borderCapStyle: 'butt',\n      borderJoinStyle: 'miter',\n      pointBorderColor: \"rgba(101, 106, 187, 1)\",\n      pointBackgroundColor: \"#fff\",\n      pointBorderWidth: 2,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: \"rgba(189, 191, 234, 1)\",\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\n      pointHoverBorderWidth: 2,\n      pointRadius: 5,\n      pointHitRadius: 10,\n      data: weekly[1]\n  }]\n},\n  options: {\n    legend: {display: false},\n    scales: {\n      yAxes: [{\n        ticks: weekly[2]\n      }]\n    }\n  }\n})\n\nconst hourlyP = document.getElementsByClassName('hourly')[0];\n    hourlyP.addEventListener('click', function(){\n    trafficChart.data.labels = hourly[0];\n    trafficChart.data.datasets[0].data = hourly[1];\n    trafficChart.options.scales.yAxes[0].ticks.max = 100\n    trafficChart.options.scales.yAxes[0].ticks.min = 0\n    trafficChart.options.scales.yAxes[0].ticks.stepSize = 20\n    trafficChart.update()\n})\nconst dailyP = document.getElementsByClassName('daily')[0];\n    dailyP.addEventListener('click', function(){\n    trafficChart.data.labels = daily[0];\n    trafficChart.data.datasets[0].data = daily[1];\n    trafficChart.options.scales.yAxes[0].ticks.max = 250\n    trafficChart.options.scales.yAxes[0].ticks.min = 0\n    trafficChart.options.scales.yAxes[0].ticks.stepSize = 100\n    trafficChart.update()\n})\nconst weeklyP = document.getElementsByClassName('weekly')[0];\nweeklyP.addEventListener('click', () => {\ntrafficChart.data.labels = weekly[0];\n    trafficChart.data.datasets[0].data = weekly[1];\n    trafficChart.options.scales.yAxes[0].ticks.max = 2500\n    trafficChart.options.scales.yAxes[0].ticks.min = 0\n    trafficChart.options.scales.yAxes[0].ticks.stepSize = 500\n    trafficChart.update()\n});\nconst monthlyP = document.getElementsByClassName('monthly')[0];\nmonthlyP.addEventListener('click', () => {\ntrafficChart.data.labels = monthly[0];\n    trafficChart.data.datasets[0].data = monthly[1];\n    trafficChart.options.scales.yAxes[0].ticks.max = 10000\n    trafficChart.options.scales.yAxes[0].ticks.min = 0\n    trafficChart.options.scales.yAxes[0].ticks.stepSize = 1500\n    trafficChart.update()\n});\n\n\n\nlet dailyTrafficChart = new Chart(dtc, {\n  type: 'bar',\n  data: {\n    labels: [\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],\n    datasets: [{\n        backgroundColor: \"rgba(101, 106, 187, 1)\",\n        data: [\"50\", \"75\", \"150\", \"100\", \"200\", \"175\",\"75\"]\n    },\n    {\n      backgroundColor: \"rgba(101, 206, 187, 1)\",\n      data: [\"90\", \"40\", \"100\", \"110\", \"180\", \"150\",\"80\"]\n    }]\n  },\n  options: {\n    legend: {display: false},\n    scales: {\n      yAxes: [{\n        ticks: {\n          max: 250,\n          stepSize: 50\n        }\n      }]\n    }\n  }\n})\n\n\n\nlet mobileUsersChart = new Chart(muc, {\n  type: 'doughnut',\n  data: {\n    labels: [\"Phones\",\"Tablets\",\"Desktop\",\"Laptop\",\"Others\"],\n    datasets: [{\n        backgroundColor: \"rgba(101, 106, 187, 1)\",\n        data: [\"22\", \"30\", \"17\", \"29\", \"2\"],\n        backgroundColor: [\n          \"rgba(225, 74, 86,.8)\",\n          \"rgba(247, 125, 8,.8)\",\n          \"rgba(160, 185, 40,.8)\",\n          \"rgba(68, 33, 71,.8)\",\n          \"rgba(23, 152, 179,.8)\"\n        ],\n        hoverBackgroundColor: [\n          \"rgba(225, 74, 86, 1)\",\n          \"rgba(247, 125, 8, 1)\",\n          \"rgba(160, 185, 40, 1)\",\n          \"rgba(68, 33, 71, 1)\",\n          \"rgba(23, 152, 179, 1)\"\n        ]\n\n    }]\n  },\n  options: {\n    legend: {\n      display: true,\n      position: \"right\",\n      labels: {\n        //fontSize: \"10\",\n        usePointStyle: true\n      }\n    }\n  }\n})\n\n/*------------------------------------------ \n  LOCAL STORAGE\n------------------------------------------*/\nconst formSettings = document.getElementById('form-settings');\nconst emailNotification = document.getElementById('switch_1');\nconst profilePublic = document.getElementById('switch_2');\nconst timeZone = document.getElementById('select-timezone');\n\n\nformSettings.addEventListener('submit', event => {\n  const sets = [\n    ['setEmail', emailNotification.checked],\n    ['setProfile', profilePublic.checked],\n    ['setTimezone', timeZone.value]\n  ];\n\n  event.preventDefault();\n    for (let i = 0; i < sets.length; i++) {\n      var setKey = sets[i][0];\n      var setValue = sets[i][1];\n      var local = localStorage.setItem(setKey, setValue)\n    }\n})\n\nif(localStorage.setEmail === 'false'){\n      emailNotification.checked = false\n    } else {\n      emailNotification.checked = true\n    }\nif(localStorage.setProfile === 'false'){\n      profilePublic.checked = false\n    } else {\n      profilePublic.checked = true\n    }\n\ntimeZone.value = localStorage.setTimezone\n\n\n\n/*------------------------------------------ \n  SEARCH FOR USER VALIDATION\n------------------------------------------*/\n\nconst formSearchUser = document.getElementById('searchForUserForm');\nconst inputSearchUser = document.getElementById('inputForUserForm');\nconst textAreaUserMessage = document.getElementById('textAreaForUserForm');\n\n\n/*------------------------------------------ \n  SEARCH FOR USER\n------------------------------------------*/\nconst userName = ['Victoria Chambers', 'Dale Byrd', 'Dawn Wood', 'Dan Oliver']\n\nfunction findUser(type, userName){\n  return userName.filter(user => {\n    const regex = new RegExp(type, 'gi');\n    return user.match(regex)\n  } )\n}\n\nfunction displayUser(){\n  const matches = findUser(this.value, userName);\n  let result = document.querySelector(\"#result\")\n  html = '<ul>'\n  html += matches.map(user => `<li><b>@</b>${user}</li>`).join('')\n  html += '</ul>'\n  result.innerHTML = html\n  result.querySelectorAll(\"li\")\n    .forEach((user)=>{ user.addEventListener('click',\n      () => {\n        inputSearchUser.value = user.textContent\n        result.innerHTML = ''\n      }) \n    })\n    if(inputSearchUser.value == '' || matches == ''){\n      result.style.visibility = 'hidden'\n    } else {\n      result.style.visibility = 'visible'\n    }\n}\n\ninputSearchUser.addEventListener('keyup', displayUser)\n\n/*------------------------------------------ \n  FLASH MESSAGES\n------------------------------------------*/\nconst sendBtn = formSearchUser.getElementsByTagName('button');\nsendBtn[0].addEventListener('click', poptip,false)\n\nfunction poptip(event){\n  event.preventDefault();\n  if(inputSearchUser.value == '' || textAreaUserMessage.value == ''){\n    formSearchUser.querySelector('.error').style.visibility = 'visible'\n    formSearchUser.querySelector('.error').style.opacity = '1'\n    formSearchUser.querySelector('.error').style.transform = 'translateY(50%)'\n    formSearchUser.querySelector('.error').style.transition = 'all .3s'\n    setTimeout(()=>{\n      formSearchUser.querySelector('.error').style.visibility = 'hidden'\n      formSearchUser.querySelector('.error').style.opacity = '0'\n      formSearchUser.querySelector('.error').style.transform = 'translateY(-300%)'\n      formSearchUser.querySelector('.error').style.transition = 'all .5s'\n    }, 1800)\n  } else {\n    formSearchUser.querySelector('.success').style.visibility = 'visible'\n    formSearchUser.querySelector('.success').style.opacity = '1'\n    formSearchUser.querySelector('.success').style.transform = 'translateY(50%)'\n    formSearchUser.querySelector('.success').style.transition = 'all .3s'\n    formSearchUser.querySelector('.success').style.backgroundColor = 'rgba(green, .6)'\n    setTimeout(()=>{\n      formSearchUser.querySelector('.success').style.visibility = 'hidden'\n      formSearchUser.querySelector('.success').style.opacity = '0'\n      formSearchUser.querySelector('.success').style.transform = 'translateY(300%)'\n      formSearchUser.querySelector('.success').style.transition = 'all .5s'\n    }, 1800)\n\n  }\n}\n\n\n/*------------------------------------------ \n  NOTIFY SHOW/HIDE\n------------------------------------------*/\nconst notify = document.querySelector('.notify')\nconst notifyItems = document.querySelector('.notify-items')\nnotify.addEventListener('click', () => {\n  notifyItems.classList.toggle('visible')\n})\n\nnotifyItems.addEventListener('mouseleave', () => {\n  if (notifyItems.classList.contains('visible')){\n    notifyItems.classList.remove('visible')\n  }\n})"],"file":"app.js"}